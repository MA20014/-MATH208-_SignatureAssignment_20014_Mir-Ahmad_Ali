import datetime
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn import metrics

# Load data from the Excel file downloaded from kaggle
file_path = 'housing_price_dataset.cvs'  # Update with your file path
data = pd.read_cvs(file_path)

#choose the columns 'X' and 'Y' as x and y for the variables SquareFeet and Price
x_column = 'SquareFeet'  
y_column = 'Price'  

# Extracting x and y values
x = data[x_column].values.reshape(-1, 1)
y = data[y_column].values.reshape(-1, 1)

#splitting data into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2, random_state=42)

# Creating a linear regression model
model = LinearRegression()
model.fit(x_train, y_train)

# Making predictions
y_pred = model.predict(x_test)

mse = metrics.mean_squared_error(y_test, y_pred)
r_square = metrics.r2_score(y_test, y_pred)

print(f'MEAN SQUARE ERROR: {mse}')
print(f'R-square: {r_square}')

# Plotting the data and the regression line
#plt.figure(figsize=(8, 6))
#plt.scatter(x, y, label='Data Points')
#plt.plot(x_range, y_pred, color='red', label='Regression Line')
#plt.title('Linear Regression from Excel Data')
#plt.xlabel(x_column)
#plt.ylabel(y_column)
#plt.legend()
#plt.grid(True)
#plt.show()

# Plotting the data and the regression line
plt.scatter(x_test, y_test, color='blue', label='Real House Prices')
plt.plot(x_test, y_pred, color='red',linewidth=2, label='Predicted House Prices')
plt.xlabel('HouseSize')
plt.ylabel('Price')
plt.legend()
plt.show()

print("Date:" , datetime.datetime.today()
